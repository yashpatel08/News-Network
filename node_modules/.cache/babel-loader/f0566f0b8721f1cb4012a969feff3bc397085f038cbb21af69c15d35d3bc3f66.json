{"ast":null,"code":"var _jsxFileName = \"E:\\\\REACT JS\\\\newsapp\\\\src\\\\components\\\\News.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport NewsItem from \"./NewsItem\";\nimport { Spinner } from \"./Spinner\";\nimport PropTypes from \"prop-types\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst News = props => {\n  _s();\n  const [articles, setArticles] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [page, setPage] = useState([1]);\n  const [totalResults, setTotalResults] = useState(0);\n\n  // document.title = `${this.capitalize(props.category)} - News Network`;\n  capitalize = string => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n  const updateNews = async () => {\n    props.setProgress(10);\n    const url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apikey=${props.apiKey}&page=${this.state.page}&pagesize=${props.pageSize}`;\n    this.setState({\n      loading: true\n    });\n    let data = await fetch(url);\n    props.setProgress(40);\n    let parsedData = await data.json();\n    props.setProgress(70);\n    setArticles(parsedData.articles);\n    setTotalResults(parsedData.totalResults);\n    setLoading(false);\n    props.setProgress(100);\n  };\n  useEffect(() => {\n    this.updateNews();\n  }, []);\n  handlePrevClick = async () => {\n    this.setState({\n      page: this.state.page - 1\n    });\n    this.updateNews();\n  };\n  handleNextClick = async () => {\n    this.setState({\n      page: this.state.page + 1\n    });\n    this.updateNews();\n  };\n  fetchMoreData = async () => {\n    this.setState({\n      page: this.state.page + 1\n    });\n    const url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apikey=${props.apiKey}&page=${this.state.page}&pagesize=${props.pageSize}`;\n    let data = await fetch(url);\n    let parsedData = await data.json();\n    this.setState({\n      articles: this.state.articles.concat(parsedData.articles),\n      totalArticles: parsedData.totalResults\n    });\n    if (parsedData.articles.length === 0) {\n      // If no more articles are fetched, set allArticlesFetched to true\n      this.setState({\n        allArticlesFetched: true\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        id: \"header\",\n        children: [\"News Network - Top \", this.capitalize(props.category), \" Headlines\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), this.state.loading && this.state.articles.length === 0 && /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 66\n    }, this), !this.state.loading && /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n      dataLength: this.state.articles.length,\n      next: this.fetchMoreData,\n      hasMore: !this.state.allArticlesFetched,\n      loader: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 19\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: this.state.articles.map(element => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-4\",\n              children: /*#__PURE__*/_jsxDEV(NewsItem, {\n                title: element.title ? element.title.slice(0, 80) : \"\",\n                description: element.description ? element.description.slice(0, 79) : \"\",\n                imgUrl: element.urlToImage || \"\",\n                newsUrl: element.url || \"\",\n                author: element.author,\n                date: element.publishedAt,\n                source: element.source.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 21\n              }, this)\n            }, element.url, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 25\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 7\n  }, this);\n};\n_s(News, \"9J0EpKxHCuApGxkbXJ+SkPIZhts=\");\n_c = News;\nNews.defaultProps = {\n  country: \"in\",\n  pageSize: 10,\n  category: \"general\",\n  apiKey: process.env.REACT_APP_NEWS_API\n};\nNews.propTypes = {\n  country: PropTypes.string,\n  pageSize: PropTypes.number,\n  category: PropTypes.string\n};\nexport default News;\nvar _c;\n$RefreshReg$(_c, \"News\");","map":{"version":3,"names":["React","useEffect","useState","NewsItem","Spinner","PropTypes","InfiniteScroll","jsxDEV","_jsxDEV","News","props","_s","articles","setArticles","loading","setLoading","page","setPage","totalResults","setTotalResults","capitalize","string","charAt","toUpperCase","slice","updateNews","setProgress","url","country","category","apiKey","state","pageSize","setState","data","fetch","parsedData","json","handlePrevClick","handleNextClick","fetchMoreData","concat","totalArticles","length","allArticlesFetched","children","className","id","fileName","_jsxFileName","lineNumber","columnNumber","dataLength","next","hasMore","loader","map","element","title","description","imgUrl","urlToImage","newsUrl","author","date","publishedAt","source","name","_c","defaultProps","process","env","REACT_APP_NEWS_API","propTypes","number","$RefreshReg$"],"sources":["E:/REACT JS/newsapp/src/components/News.js"],"sourcesContent":["import React, {useEffect,useState} from \"react\";\r\nimport NewsItem from \"./NewsItem\";\r\nimport { Spinner } from \"./Spinner\";\r\nimport PropTypes from \"prop-types\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\n\r\n\r\nconst News = (props) => {\r\n  \r\n  const [articles,setArticles]= useState([])\r\n  const [loading,setLoading]= useState(true)\r\n  const [page,setPage]= useState([1])\r\n  const [totalResults,setTotalResults]= useState(0)\r\n\r\n  // document.title = `${this.capitalize(props.category)} - News Network`;\r\n  capitalize = (string) => {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n  };\r\n  \r\n  const updateNews = async () => {\r\n    props.setProgress(10);\r\n    const url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apikey=${props.apiKey}&page=${this.state.page}&pagesize=${props.pageSize}`;\r\n    this.setState({ loading: true });\r\n    let data = await fetch(url);\r\n    props.setProgress(40);\r\n    let parsedData = await data.json();\r\n    props.setProgress(70);\r\n    setArticles(parsedData.articles)\r\n    setTotalResults(parsedData.totalResults)\r\n    setLoading(false)\r\n    props.setProgress(100);\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    this.updateNews();\r\n  },[])\r\n\r\n  handlePrevClick = async () => {\r\n    \r\n    this.setState({\r\n      page: this.state.page - 1,\r\n    });\r\n    this.updateNews();\r\n  };\r\n\r\n  handleNextClick = async () => {\r\n    this.setState({\r\n      page: this.state.page + 1,\r\n    });\r\n    this.updateNews();\r\n  };\r\n\r\n  fetchMoreData = async () => {\r\n    \r\n    this.setState({ page: this.state.page + 1 });\r\n    const url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apikey=${props.apiKey}&page=${this.state.page}&pagesize=${props.pageSize}`;\r\n    let data = await fetch(url);\r\n    let parsedData = await data.json();\r\n    this.setState({\r\n      articles: this.state.articles.concat(parsedData.articles),\r\n      totalArticles: parsedData.totalResults,\r\n      \r\n    })\r\n    if (parsedData.articles.length === 0) {\r\n      // If no more articles are fetched, set allArticlesFetched to true\r\n      this.setState({ allArticlesFetched: true });\r\n    }\r\n  };\r\n\r\n    return (\r\n      <div>\r\n        <h1 className=\"text-center\">\r\n          <h2 id=\"header\">\r\n            News Network - Top {this.capitalize(props.category)} Headlines\r\n          </h2>\r\n        </h1>\r\n       {this.state.loading && this.state.articles.length ===0 && <Spinner />}\r\n       {!this.state.loading && (\r\n        <InfiniteScroll\r\n          dataLength={this.state.articles.length}\r\n          next={this.fetchMoreData}\r\n          hasMore={!this.state.allArticlesFetched}\r\n          loader={<Spinner />}\r\n        >\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              {this.state.articles.map((element) => {\r\n                return (<div className=\"col-md-4\" key={element.url}>\r\n                    <NewsItem\r\n                      title={element.title ? element.title.slice(0, 80) : \"\"}\r\n                      description={ element.description ? element.description.slice(0, 79) : \"\" } imgUrl={element.urlToImage || \"\"} newsUrl={element.url || \"\"} author={element.author} date={element.publishedAt} source={element.source.name}\r\n                    />\r\n                  </div>\r\n                )\r\n              })}\r\n            </div>\r\n          </div>\r\n        </InfiniteScroll>\r\n       )}\r\n        \r\n      </div>\r\n    );\r\n  \r\n}\r\n\r\n\r\n\r\nNews.defaultProps = {\r\n  country: \"in\",\r\n  pageSize: 10,\r\n  category: \"general\",\r\n  apiKey: process.env.REACT_APP_NEWS_API\r\n};\r\n\r\nNews.propTypes = {\r\n  country: PropTypes.string,\r\n  pageSize: PropTypes.number,\r\n  category: PropTypes.string,\r\n};\r\n\r\nexport default News\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}